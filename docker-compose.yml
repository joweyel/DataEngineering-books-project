# version: '3'
services:
  magic:
    image: mageai/mageai:latest
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      USER_CODE_PATH: /home/src/${PROJECT_NAME}
      KAGGLE_PATH: /home/src/.kaggle
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
    restart: on-failure:5
  
  postgres:
    image: postgres:14
    restart: on-failure
    container_name: ${PROJECT_NAME}-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ${PROJECT_NAME}-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
 
  grafana:
    image: grafana/grafana:latest
    container_name: ${PROJECT_NAME}-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin # Set your Grafana admin password here
      GF_INSTALL_PLUGINS: grafana-redshift-datasource
      GF_AWS_PROFILES: ${AWS_PROFILE}
      GF_AWS_default_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      GF_AWS_default_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      GF_AWS_default_REGION: ${AWS_REGION}
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
    depends_on:
      - postgres
    restart: unless-stopped

